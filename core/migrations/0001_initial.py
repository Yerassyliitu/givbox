# Generated by Django 4.1.10 on 2023-09-22 10:30

import category.imggenerate
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('category', '0001_initial'),
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ModelImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('image', models.ImageField(upload_to=category.imggenerate.all_image_file_path, verbose_name='Фото')),
            ],
            options={
                'verbose_name': 'Фотография',
                'verbose_name_plural': 'Фотографии',
            },
        ),
        migrations.CreateModel(
            name='ModelRequests',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateSending', models.DateField(blank=True, verbose_name='Дата отправки')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Дата оформления')),
                ('phone', models.CharField(max_length=50, verbose_name='Телефон')),
                ('telegram', models.TextField(blank=True, verbose_name='Телеграм')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('weight', models.FloatField(default=0, verbose_name='Масса')),
                ('archive', models.BooleanField(default=False, verbose_name='Архив')),
                ('trackNumbers', models.CharField(blank=True, max_length=255, verbose_name='Номер дорожки')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.client', verbose_name='Клиент')),
                ('fromCity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='from_cityw', to='category.modelcity')),
                ('fromCountry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='from_countryw', to='category.modelcountry')),
                ('packageType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='category.modelpackagetype', verbose_name='Тип посылки')),
                ('toCity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='to_cityw', to='category.modelcity')),
                ('toCountry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='to_countryw', to='category.modelcountry')),
            ],
            options={
                'verbose_name': 'Запрос',
                'verbose_name_plural': 'Запросы',
            },
        ),
        migrations.CreateModel(
            name='ModelPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('status', models.CharField(choices=[('created', 'Оформлен'), ('on_way', 'В пути'), ('arrived', 'Прибыл'), ('done', 'Выполнен')], default='created', max_length=20, verbose_name='Статус')),
                ('pid', models.CharField(blank=True, max_length=100, verbose_name='PID')),
                ('dateArrived', models.DateField(blank=True, null=True, verbose_name='Дата прибытия')),
                ('dateSending', models.DateField(blank=True, null=True, verbose_name='Дата отправки')),
                ('orderNumber', models.CharField(max_length=100, verbose_name='Номер заказа')),
                ('weight', models.FloatField(default=0, verbose_name='Вес')),
                ('paymentStatus', models.CharField(choices=[('paid', 'Оплачено'), ('unpaid', 'Не оплачено')], default='unpaid', max_length=20, verbose_name='Статус оплаты')),
                ('clientName', models.CharField(blank=True, max_length=200, null=True, verbose_name='Имя клиента')),
                ('senderName', models.CharField(blank=True, max_length=150, null=True, verbose_name='Имя отправителя')),
                ('senderPhone', models.CharField(blank=True, max_length=150, null=True, verbose_name='Тел отправителя')),
                ('receiverName', models.CharField(blank=True, max_length=150, null=True, verbose_name='Имя получателя')),
                ('receiverPhone', models.CharField(blank=True, max_length=150, null=True, verbose_name='Тел получателя')),
                ('costPerKg', models.FloatField(default=0)),
                ('extraCost', models.FloatField(default=0)),
                ('totalCost', models.FloatField(default=0, verbose_name='Общая цена')),
                ('comment', models.TextField(default=0, verbose_name='Комментарий')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.client', verbose_name='Клиент')),
                ('clients', models.ManyToManyField(blank=True, related_name='clients', to='user.client', verbose_name='Клиенты')),
                ('packageType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='category.modelpackagetype', verbose_name='Тип посылки')),
                ('receiverCity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='receiver_city', to='category.modelcity', verbose_name='Получатель-Город')),
                ('receiverCountry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='receiver_country', to='category.modelcountry', verbose_name='Получатель-Страна')),
                ('senderCity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sender_city', to='category.modelcity', verbose_name='Точка отправки-Город')),
                ('senderCountry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sender_country', to='category.modelcountry', verbose_name='Точка отправки-Страна')),
            ],
            options={
                'verbose_name': 'Посылка',
                'verbose_name_plural': 'Посылки',
            },
        ),
        migrations.CreateModel(
            name='ModelDepots',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameKg', models.CharField(max_length=100, verbose_name='Депонун аталышы')),
                ('nameEn', models.CharField(max_length=100, verbose_name="Depot's name")),
                ('nameRu', models.CharField(max_length=100, verbose_name='Название Депо')),
                ('address', models.CharField(blank=True, max_length=256, null=True, verbose_name='Адресс')),
                ('maxAmount', models.FloatField(default=0, verbose_name='Максимальное количество')),
                ('images', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None, verbose_name='Рисунки')),
                ('lat', models.FloatField(default=0, verbose_name='LAT')),
                ('lon', models.FloatField(default=0, verbose_name='LON')),
                ('types', models.CharField(choices=[('in', 'in'), ('out', 'out'), ('both', 'both')], default='both', max_length=10, verbose_name='Тип депо')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='category.modelcity', verbose_name='Город')),
                ('contacts', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='category.modelcontact', verbose_name='Контакты')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='category.modelcountry', verbose_name='Страна')),
                ('workingHours', models.ManyToManyField(blank=True, to='category.modelwh', verbose_name='Режим роботы')),
            ],
            options={
                'verbose_name': 'Депо',
                'verbose_name_plural': 'Депо',
            },
        ),
        migrations.CreateModel(
            name='ModelAlaket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('cost', models.FloatField(default=0, verbose_name='Расходы')),
                ('type', models.CharField(choices=[('alaketem', 'Возьму собой'), ('berem', 'Отдам')], default='alaketem', max_length=20, verbose_name='Тип')),
                ('photo', models.TextField(blank=True, verbose_name='Фото')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.client', verbose_name='Клиент')),
                ('fromCity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fromCity', to='category.modelcity', verbose_name='Из города')),
                ('toCity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='toCity', to='category.modelcity', verbose_name='На город')),
            ],
            options={
                'verbose_name': 'Алакет',
                'verbose_name_plural': 'Алакет',
            },
        ),
        migrations.CreateModel(
            name='DepotUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('depot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.modeldepots', verbose_name='Депо')),
            ],
            options={
                'verbose_name': 'Пользователь депо',
                'verbose_name_plural': 'Пользователи депо',
            },
            bases=('user.user',),
        ),
    ]
